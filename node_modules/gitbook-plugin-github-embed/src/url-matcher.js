
module.exports = function urlMatcher(url) {
    const regexPrefix = '^(?:https?:\/\/)?(?:[A-Za-z0-9\-\.]+)+(?:\.[A-za-z]+){1}\/([^\/]+)\/([^\/]+)';
    const path = '(.+?(?:\\.([^#.]+))?)';
    const lines = '(?:[#]L(\\d+)(?:-L(\\d+))?)?$';
    const regex = middle => {
        const r = `${regexPrefix}${middle || ''}${path}${lines}`;
        return new RegExp(r, 'i');
    }

    const types = [
        {

            // <github.com or github enterprise url>/:owner/:repo/blob/:ref/:path
            // <github.com or github enterprise url>/:owner/:repo/blob/:ref/:path#L12
            // <github.com or github enterprise url>/:owner/:repo/blob/:ref/:path#L12-14
            regex: regex('/blob/([^\/]+)/'),
            transform: function(match) {
                const [ result, owner, repo, ref, path, extension, start, end ] = match;
                const options = {
                    request: {
                        owner,
                        repo,
                        ref,
                        path
                    },
                    extension: extension || '',
                    lines: [start, end]
                }
                return options;
            }
        }
    ]

    for (var i = 0; i < types.length; i++) {
        const type = types[i];
        const match = url.match(type.regex)
        if (match) {
            return type.transform(match)
        }
    }

    throw Error('Invalid url match for github_embed: ' + url)
}
